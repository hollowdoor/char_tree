{"version":3,"file":"char-tree.min.js","sources":["../node_modules/object-assign/index.js","../src/index.js"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","import objectAssign from 'object-assign';\n\nexport class CharTree {\n    constructor(){\n        this.tree = {branches: {}, items: []};\n    }\n    empty(){\n        this.tree = {branches: {}, items: []};\n    }\n    push(...datas){\n        datas.forEach(data=>{\n\n            let next = this.tree;\n            let list = data.split('');\n\n            list.forEach(ch=>{\n                let key = ch.toLowerCase();\n                next = (next.branches[key] = next.branches[key] || Object.create(null));\n                next.branches = next.branches || Object.create(null);\n                next.items = next.items || [];\n                next.items.push(data);\n                next.value = ch;\n            });\n\n            next.leaf = true;\n        });\n    }\n    remove(...datas){\n        datas.forEach(data=>{\n            let next = this.tree, last;\n            let list = data.split('');\n\n            for(let i=0; i<list.length; i++){\n                let char = list[i];\n                let key = char.toLowerCase();\n                let index;\n\n                last = next;\n                next = next.branches[key];\n\n                if(next === void 0) break;\n\n                if((index = next.items.indexOf(data.value)) !== -1){\n                    next.items.splice(index, 1);\n                    if(!next.items.length){\n                        delete last.branches[key];\n                    }else{\n                        next = next.branches[key];\n                    }\n                }\n\n            }\n        });\n    }\n    match(value){\n        let list = value.split('').map(v=>v.toLowerCase());\n\n        let next = this.tree,\n            len = list.length + 1,\n            last,\n            string = '';\n\n        if(!list.length) return {tree: null, string, value};\n\n        for(let i=0; i<len; i++){\n            last = next;\n            next = next.branches[list[i]];\n            if(!next){\n                if(list[i] !== void 0) last = null;\n                break;\n            }else{\n                string += next.value;\n            }\n        }\n\n        return {tree: last, string, value};\n    }\n    findAll(value){\n        let {tree} = this.match(value);\n        if(!tree) return [];\n        return [].concat(tree.items);\n    }\n    nextPhrase(value, sep){\n\n        let {tree, string} = this.match(value),\n            result = string;\n\n        const iter = (next)=>{\n\n            if(next.leaf){\n                return result;\n            }\n\n            let keys = Object.keys(next.branches);\n            for(let key in next.branches){\n                if(sep.test(key)){\n                    return result + key;\n                }\n                result += next.branches[key].value;\n                return iter(next.branches[key])\n\n            }\n        };\n\n        return iter(tree);\n    }\n}\n\nfunction lower(item){\n    return item.toLowerCase();\n}\n\nexport function charTreeMixin(dest){\n    return objectAssign(dest, {\n        nextPhrase(value, sep){\n            return this.charTree.nextPhrase(value, sep);\n        },\n        match(value = ''){\n            return this.charTree.match(value);\n        },\n        findAll(value){\n            return this.charTree.findAll(value);\n        },\n        push(...values){\n            values.forEach(value=>{\n                this.charTree.push(value);\n            });\n            return this;\n        },\n        pushAll(values){\n            this.charTree.push(...values);\n        },\n        empty(){\n            this.charTree.empty();\n            return this;\n        },\n        initCharTree(){\n            return this.charTree = new CharTree();\n        }\n    });\n}\n"],"names":["toObject","val","undefined","TypeError","Object","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","CharTree","this","tree","branches","items","empty","push","datas","data","next","ch","toLowerCase","create","value","leaf","remove","let","last","list","index","indexOf","splice","match","v","len","string","findAll","concat","nextPhrase","sep","result","iter","test","dest","objectAssign","charTree","values","pushAll","ref","initCharTree"],"mappings":"0BAYA,SAASA,EAASC,GACjB,GAAY,OAARA,QAAwBC,IAARD,EACnB,MAAM,IAAIE,UAAU,yDAGrB,OAAOC,OAAOH,GATf,IAAII,EAAwBD,OAAOC,sBAC/BC,EAAiBF,OAAOG,UAAUD,eAClCE,EAAmBJ,OAAOG,UAAUE,uBAUxC,WACC,IACC,IAAKL,OAAOM,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCP,OAAOS,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IAAK,IADDG,KACKC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAM,IAAMF,OAAOI,aAAaD,IAAMA,EAKvC,GAAwB,eAHXX,OAAOS,oBAAoBC,GAAOG,IAAI,SAAUC,GAC5D,OAAOJ,EAAMI,KAEHC,KAAK,IACf,OAAO,EAIR,IAAIC,KAIJ,MAHA,uBAAuBC,MAAM,IAAIC,QAAQ,SAAUC,GAClDH,EAAMG,GAAUA,IAGf,yBADEnB,OAAOoB,KAAKpB,OAAOM,UAAWU,IAAQD,KAAK,IAM9C,MAAOM,GAER,OAAO,GAIQC,GAAoBtB,OAAOM,OAAS,SAAUiB,EAAQC,GAKtE,IAAK,IAJDC,EAEAC,cADAC,EAAK/B,EAAS2B,GAGTK,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1CH,EAAOzB,OAAO6B,EAAUD,IAExB,IAAK,IAAIG,KAAON,EACXvB,EAAe8B,KAAKP,EAAMM,KAC7BJ,EAAGI,GAAON,EAAKM,IAIjB,GAAI9B,EAAuB,CAC1ByB,EAAUzB,EAAsBwB,GAChC,IAAK,IAAId,EAAI,EAAGA,EAAIe,EAAQI,OAAQnB,IAC/BP,EAAiB4B,KAAKP,EAAMC,EAAQf,MACvCgB,EAAGD,EAAQf,IAAMc,EAAKC,EAAQf,MAMlC,OAAOgB,GCtFKM,EAAS,WAElBC,KAASC,MAAQC,YAAcC,WAEnCJ,YAAIK,iBACAJ,KAASC,MAAQC,YAAcC,WAEnCJ,YAAIM,8EACAC,EAAUtB,QAAQ,SAAAuB,GAEd,IAAQC,EAAOR,EAAKC,KACLM,EAAKxB,MAAM,IAEjBC,QAAQ,SAAAyB,GACb,IAAQZ,EAAMY,EAAGC,eACjBF,EAAYA,EAAKN,SAASL,GAAOW,EAAKN,SAASL,IAAQ/B,OAAO6C,OAAO,OAC5DT,SAAWM,EAAKN,UAAYpC,OAAO6C,OAAO,MACnDH,EAASL,MAAQK,EAAKL,UACtBK,EAASL,MAAME,KAAKE,GACpBC,EAASI,MAAQH,IAGrBD,EAASK,MAAO,KAGxBd,YAAIe,gFACAR,EAAUtB,QAAQ,SAAAuB,GAId,IAAQQ,IAHkBC,EAAlBR,EAAOR,EAAKC,KACZgB,EAAOV,EAAKxB,MAAM,IAEdN,EAAE,EAAGA,EAAEwC,EAAKrB,OAAQnB,IAAI,CAChC,IACQoB,EADOoB,EAAKxC,GACDiC,cACXQ,SAKR,GAHAF,EAAWR,OAGK,KAFhBA,EAAWA,EAAKN,SAASL,IAED,OAE6B,KAA7CqB,EAAQV,EAAKL,MAAMgB,QAAQZ,EAAKK,UACpCJ,EAASL,MAAMiB,OAAOF,EAAO,GACrBV,EAAKL,MAAMP,OAGfY,EAAWA,EAAKN,SAASL,UAFdmB,EAAKd,SAASL,QAS7CE,YAAIsB,eAAMT,GACN,IAIII,EAJIC,EAAOL,EAAM7B,MAAM,IAAIJ,IAAI,SAAA2C,UAAGA,EAAEZ,gBAEhCF,EAAOR,KAAKC,KAChBsB,EAAUN,EAAKrB,OAAS,EAExB4B,EAAa,GAEjB,IAAQP,EAAKrB,OAAQ,OAAQK,KAAM,KAAMuB,OAAAA,EAAQZ,MAAAA,GAEjD,IAAQG,IAAItC,EAAE,EAAGA,EAAE8C,EAAK9C,IAAI,CAGxB,GAFAuC,EAAWR,IACXA,EAAWA,EAAKN,SAASe,EAAKxC,KACjB,MACU,IAAZwC,EAAKxC,KAAeuC,EAAO,MAClC,MAEAQ,GAAchB,EAAKI,MAI3B,OAAYX,KAAMe,EAAMQ,OAAAA,EAAQZ,MAAAA,IAEpCb,YAAI0B,iBAAQb,GACR,IAASX,EAAQD,KAAKqB,MAAMT,QAC5B,OAAQX,KACMyB,OAAOzB,EAAKE,WAE9BJ,YAAI4B,oBAAWf,EAAOgB,GAElB,MAAyB5B,KAAKqB,MAAMT,GAA3BX,SACL4B,WAEMC,EAAO,SAACtB,GAEd,GAAOA,EAAKK,KACR,OAAWgB,EAGA/D,OAAOoB,KAAKsB,EAAKN,UAChC,IAAQa,IAAIlB,KAAOW,EAAKN,SACpB,OAAO0B,EAAIG,KAAKlC,GACDgC,EAAShC,GAExBgC,GAAcrB,EAAKN,SAASL,GAAKe,MACtBkB,EAAKtB,EAAKN,SAASL,MAKtC,OAAWiC,EAAK7B,iCAIpB,SAI8B+B,GAC1B,OAAOC,EAAaD,GAChBL,oBAAWf,EAAOgB,GACd,OAAO5B,KAAKkC,SAASP,WAAWf,EAAOgB,IAE3CP,eAAMT,GACF,sBADU,IACHZ,KAAKkC,SAASb,MAAMT,IAE/Ba,iBAAQb,GACJ,OAAOZ,KAAKkC,SAAST,QAAQb,IAEjCP,8EAII,OAHA8B,EAAOnD,QAAQ,SAAA4B,GACXZ,EAAKkC,SAAS7B,KAAKO,KAEhBZ,MAEXoC,iBAAQD,MACJnC,KAAKkC,UAAS7B,WAAKgC,EAAAF,UAEvB/B,iBAEI,OADAJ,KAAKkC,SAAS9B,QACPJ,MAEXsC,wBACI,OAAOtC,KAAKkC,SAAW,IAAInC"}